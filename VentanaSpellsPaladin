setDefaultTab("Main")

g_ui.loadUIFromString([[
menPanel < Panel
  margin: 2
  margin-bottom: 17
  layout:
    type: verticalBox

ConfigWindowPaladin < MainWindow
  !text: tr('- ROYAL PALADIN -')
  font: terminus-10px
  color: yellow
  size: 200 190
  @onEscape: self:hide()

  TabBar
    id: spellsTabBar
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 2

  Panel
    id: spellsImagem
    anchors.top: spellsTabBar.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    image-border: 2

  Button
    id: closeButton
    !text: tr('Cerrar')
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    size: 49 21
    margin-top: 1
    margin-right: -5
    margin-bottom: -5
]])

local panelName = "configPaladin"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]

rootWidget = g_ui.getRootWidget()
if rootWidget then
  configWindowPaladin = UI.createWindow('ConfigWindowPaladin', rootWidget)
  configWindowPaladin:hide()
  local TabBarSpells = configWindowPaladin.spellsTabBar
  TabBarSpells:setContentWidget(configWindowPaladin.spellsImagem)

  -- Panel para macros Normales
  local normalPanel = g_ui.createWidget("menPanel")
  normalPanel:setId("panelNormal")
  TabBarSpells:addTab("PVP", normalPanel)

  -- Panel para macros No PK
  local noPkPanel = g_ui.createWidget("menPanel")
  noPkPanel:setId("panelNoPK")
  TabBarSpells:addTab("No PVP", noPkPanel)

  -- Panel para macros Wheel
  local wheelPanel = g_ui.createWidget("menPanel")
  wheelPanel:setId("panelWheel")
  TabBarSpells:addTab("Wheel", wheelPanel)

  -- Panel para macros Más
  local masPanel = g_ui.createWidget("menPanel")
  masPanel:setId("panelMas")
  TabBarSpells:addTab(" + ", masPanel)

  UI.Separator(normalPanel)
  UI.Separator(noPkPanel)
  UI.Separator(wheelPanel)
  UI.Separator(masPanel)

  local listaMacrosNormal = {}
  local listaMacrosNoPK = {}
  local listaMacrosWheel = {}
  local listaMacrosMas = {}

  -- Macros para hechizos del Paladin
  local exanaAmpRes = macro(10000, "Exana Amp Res", function()
    if g_game.isAttacking() then
      say("exana amp res")
    end
  end)

  local exevoMasSan = macro(2000, "Exevo Mas San", function()
    if g_game.isAttacking() then
      say("exevo mas san")
    end
  end)

  local exoriGranCon = macro(1900, "Exori Gran Con", function()
    if g_game.isAttacking() then
      say("exori gran con")
      say("exori gran con")
      say("exori gran con")
    end
  end)

  local exoriCon = macro(1900, "Exori Con", function()
    if g_game.isAttacking() then
      say("exori con")
      say("exori con")
      say("exori con")
    end
  end)

  local exoriSan = macro(1700, "Exori San", function()
    if g_game.isAttacking() then
      say("exori san")
      say("exori san")
      say("exori san")
    end
  end)

  -- Agregar macros al panel Normal
  table.insert(listaMacrosNormal, exanaAmpRes)
  table.insert(listaMacrosNormal, exevoMasSan)
  table.insert(listaMacrosNormal, exoriGranCon)
  table.insert(listaMacrosNormal, exoriCon)
  table.insert(listaMacrosNormal, exoriSan)

  -- Macro para No-PK
  local distance = 5  -- Distancia para detectar jugadores cercanos

  local exevoMasSanNoPK = macro(1500, "Exevo Mas San (No-PK)", function()
    local playerInScreen = false
    if not g_game.isAttacking() then
        return
    end
    for i, mob in ipairs(getSpectators()) do
        if (getDistanceBetween(player:getPosition(), mob:getPosition()) <= distance and mob:isPlayer()) and (player:getName() ~= mob:getName()) then
            playerInScreen = true
        end
    end
    if not playerInScreen then
        say("exevo mas san")
    end
  end)

  -- Agregar el macro al panel No-PK
  table.insert(listaMacrosNoPK, exevoMasSanNoPK)

  -- Nuevos macros para el panel Wheel
  local utevoGravSan = macro(10000, "Utevo Grav San", function()
    if g_game.isAttacking() then
      say("utevo grav san")
    end
  end)

  local exevoTempoMasSan = macro(10000, "Exevo Tempo Mas San", function()
    if g_game.isAttacking() then
      say("exevo tempo mas san")
    end
  end)

  -- Agregar macros al panel Wheel
  table.insert(listaMacrosWheel, utevoGravSan)
  table.insert(listaMacrosWheel, exevoTempoMasSan)


  -- Definir el nuevo macro para el panel Más
  local pvp = true
  local Spells = {
      {
          name = "exevo mas san",
          cast = true,
          amount = 2,
          distance = 1,
          safe = true,
          turning = false,
          manaCost = 160
      },
      {
          name = "exevo mas san",
          cast = true,
          amount = 2,
          distance = 2,
          safe = true,
          turning = true,
          manaCost = 160
      },
      {
          name = "exori con",
          cast = true,
          amount = 1,
          distance = 1,
          safe = true,
          turning = false,
          manaCost = 25
      },
      {
          name = "exori con",
          cast = false,
          amount = 1,
          distance = 3,
          safe = true,
          turning = true,
          manaCost = 25
      },
      {
          name = "exori gran con",
          cast = true,
          amount = 1,
          distance = 5,
          safe = true,
          turning = true,
          manaCost = 55
      },
      {
          name = "exori gran con",
          cast = true,
          amount = 1,
          distance = 4,
          safe = true,
          turning = true,
          manaCost = 55
      }
  }

  macro(500, "Spell x Creature (V+12)", function()
      local isSafe = true
      local target = g_game.getAttackingCreature()
      local direct

      if not g_game.isAttacking() then
          return
      end

      if player:getPosition().z == target:getPosition().z then
          if player:getPosition().x > target:getPosition().x then
              direct = 3 -- oeste
          elseif player:getPosition().x < target:getPosition().x then
              direct = 1 -- este
          elseif player:getPosition().y < target:getPosition().y then
              direct = 2 -- norte
          elseif player:getPosition().y > target:getPosition().y then
              direct = 0 -- sur
          end
      end

      for _, spell in ipairs(Spells) do
          local specAmount = 0
          for _, mob in ipairs(getSpectators()) do
              if (getDistanceBetween(player:getPosition(), mob:getPosition()) <= spell.distance and mob:isMonster()) then
                  specAmount = specAmount + 1
              end
              if (mob:isPlayer() and player:getName() ~= mob:getName()) then
                  isSafe = false
              end
          end
          if (spell.cast) and (specAmount >= spell.amount) and (mana() >= spell.manaCost) then
              if spell.turning then
                  turn(direct)
              end
              if pvp then
                  if isSafe then
                      say(spell.name)
                  elseif not isSafe and spell.safe then
                      say(spell.name)
                  end
              else
                  say(spell.name)
              end
          end
      end
  end, masPanel)
  
  -- Agregar checkboxes para el panel Normal
  local checkboxesNormal = {}
  for _, mac in ipairs(listaMacrosNormal) do
      local checkbox = g_ui.createWidget("CheckBox", normalPanel)
      checkbox:setText(mac.switch:getText())
      checkbox.onCheckChange = function(wid, isChecked)
          mac.setOn(isChecked and config.enabled)
      end
      checkbox:setChecked(mac.isOn())
      mac.switch:setVisible(false)
      table.insert(checkboxesNormal, checkbox)
  end

  -- Agregar checkboxes para el panel No PK
  local checkboxesNoPK = {}
  for _, mac in ipairs(listaMacrosNoPK) do
      local checkbox = g_ui.createWidget("CheckBox", noPkPanel)
      checkbox:setText(mac.switch:getText())
      checkbox.onCheckChange = function(wid, isChecked)
          mac.setOn(isChecked and config.enabled)
      end
      checkbox:setChecked(mac.isOn())
      mac.switch:setVisible(false)
      table.insert(checkboxesNoPK, checkbox)
  end

  -- Agregar checkboxes para el panel Wheel
  local checkboxesWheel = {}
  for _, mac in ipairs(listaMacrosWheel) do
      local checkbox = g_ui.createWidget("CheckBox", wheelPanel)
      checkbox:setText(mac.switch:getText())
      checkbox.onCheckChange = function(wid, isChecked)
          mac.setOn(isChecked and config.enabled)
      end
      checkbox:setChecked(mac.isOn())
      mac.switch:setVisible(false)
      table.insert(checkboxesWheel, checkbox)
  end

  -- Agregar checkboxes para el panel Más
  local checkboxesMas = {}
  for _, mac in ipairs(listaMacrosMas) do
      local checkbox = g_ui.createWidget("CheckBox", masPanel)
      checkbox:setText(mac.switch:getText())
      checkbox.onCheckChange = function(wid, isChecked)
          mac.setOn(isChecked and config.enabled)
      end
      checkbox:setChecked(mac.isOn())
      mac.switch:setVisible(false)
      table.insert(checkboxesMas, checkbox)
  end

  configWindowPaladin.closeButton.onClick = function(widget)
      configWindowPaladin:hide()
  end

  -- Switch para habilitar/deshabilitar los macros
  UI.SwitchAndButton({on = config.enabled, left = "Paladin Spells", right = "Menu"}, function(widget)
      config.enabled = not config.enabled
      for i, mac in ipairs(listaMacrosNormal) do
          mac.setOn(config.enabled and checkboxesNormal[i]:isChecked())
      end
      for i, mac in ipairs(listaMacrosNoPK) do
          mac.setOn(config.enabled and checkboxesNoPK[i]:isChecked())
      end
      for i, mac in ipairs(listaMacrosWheel) do
          mac.setOn(config.enabled and checkboxesWheel[i]:isChecked())
      end
      for i, mac in ipairs(listaMacrosMas) do
          mac.setOn(config.enabled and checkboxesMas[i]:isChecked())
      end
  end, function()
      configWindowPaladin:show()
      configWindowPaladin:raise()
      configWindowPaladin:focus()
  end)
end


